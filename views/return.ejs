<div class="row mt-5">
    <div class="col-md-6 m-auto">
      <div class="card card-body text-center">
        <h1> <i class="fab fa-node-js fa-3x"></i> </h1>
        <p>Returning Voter Queue</p>
        <div class="lead mt-4 text-center">
          <a href="/admin/logout" class="btn btn-secondary"> Admin Logout </a>
          <a class="btn btn-primary btn-block" href="/dashboard">Go Back to Main Dashboard</a>  
        </div>  
        <div>
          <script src="../modules/html5-qrcode.min.js"></script>

          <div id="reader"></div>

          <script>
              //TO FIX: Current code will not send a post request if someone tries scanning the same QR code twice in a row. 
              let previousScan = "";
              function onScanSuccess(qrMessage) {
                  // handle the scanned code as you like
                  console.log(`QR matched = ${qrMessage}`);
                  if(previousScan == qrMessage){
                    const XHR = new XMLHttpRequest();
                    XHR.open('POST', '/dashboard/return');
                    XHR.send(qrMessage);
                    XHR.onreadystatechange=function(){
                      console.log(XHR.responseText);
                      if(this.status==200){
                        console.log("AAFADKFALKD");
                      }
                    };
                    console.log(XHR.response);
                  }
                  else {
                    previousScan = qrMessage;
                  }
              }

              function onScanFailure(error) {
                  // handle scan failure, usually better to ignore and keep scanning
                  console.warn(`QR error = ${error}`);
              }

              let html5QrcodeScanner = new Html5QrcodeScanner(
                  "reader", { fps: 10, qrbox: 250 }, /* verbose= */ true);
              html5QrcodeScanner.render(onScanSuccess, onScanFailure);
              Html5Qrcode.getCameras().then(devices => {
                  /**
                  * devices would be an array of objects of type:
                  * { id: "id", label: "label" }
                  */
                  if (devices && devices.length) {
                      var cameraId = devices[0].id;
                      // .. use this to start scanning.
                  }
              }).catch(err => {
                  // handle err
              });
              const html5QrCode = new Html5Qrcode(/* element id */ "reader");
              html5QrCode.start(
              cameraId, 
              {
                  fps: 10,    // Optional frame per seconds for qr code scanning
                  qrbox: 250  // Optional if you want bounded box UI
              },
              qrCodeMessage => {
                  // do something when code is read
              },
              errorMessage => {
                  // parse error, ignore it.
              })
              .catch(err => {
              // Start failed, handle it.
              });
          </script>

        </div>
        <form action="/dashboard/return" method="POST">
          <div class="form-group">
            <label for="voterqr">Voter QR Code</label>
            <input
              type="voterqr"
              id="voterqr"
              name="voterqr"
              class="form-control"
              placeholder="Enter Voter QR Code"
              value="<%= typeof voterqr != 'undefined' ? voterqr : '' %>"
            />
          </div>
          <button type="submit" class="btn btn-primary btn-block"> submit </button>
        </form>

        </div>
      </div>
    </div>
  </div>

